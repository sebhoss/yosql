<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>SQL on YoSQL - write more SQL</title><link>https://yosql.projects.metio.wtf/categories/sql/</link><description>Recent content in SQL on YoSQL - write more SQL</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 16 Jun 2019 18:51:18 +0200</lastBuildDate><atom:link href="https://yosql.projects.metio.wtf/categories/sql/index.xml" rel="self" type="application/rss+xml"/><item><title>Vendor Statements</title><link>https://yosql.projects.metio.wtf/sql/vendor-statements/</link><pubDate>Sun, 16 Jun 2019 18:51:18 +0200</pubDate><guid>https://yosql.projects.metio.wtf/sql/vendor-statements/</guid><description>Vendor specific statements are support as well. Just add a vendor key to your front-matter like this:
-- name: findUsers -- vendor: Oracle SELECT * FROM ( SELECT ROWNUM rn, data.* FROM ( SELECT * FROM users WHERE id = :userId ) data WHERE rn &amp;lt;= :offset + :limit ) WHERE rn &amp;gt;= :offset ; -- name: findUsers -- vendor: PostgreSQL SELECT * FROM users WHERE id = :userId OFFSET :offset FETCH NEXT :limit ROWS ONLY ; -- name: findUsers SELECT * FROM users WHERE id = :userId OFFSET :offset LIMIT :limit ; The first two statements specify a vendor which means that those queries will only be executed when running against the specified database.</description></item><item><title>Write Sql Files</title><link>https://yosql.projects.metio.wtf/sql/write-sql-files/</link><pubDate>Sun, 16 Jun 2019 18:33:06 +0200</pubDate><guid>https://yosql.projects.metio.wtf/sql/write-sql-files/</guid><description>&amp;lt;project_root&amp;gt;/ └── src/ └── main/ └── yosql/ └── user/ └── getAllUsers.sql The SQL statements in your .sql files are just plain SQL, e.g. you can save the following statement in a file called getAllUsers.sql:
SELECT * FROM users YoSQL will use the name of the file (getAllUsers) as the generated method name and the name of the enclosing folder as the prefix for the generated repository. The final result is a new Java class called UserRepository which has a method called getAllUsers.</description></item></channel></rss>